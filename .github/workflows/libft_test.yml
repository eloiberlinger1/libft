name: Test Libft avec PACO

# Déclenche le workflow à chaque push sur n'importe quelle branche
on: [push]

jobs:
  test_libft:
    # Utilise un runner Linux (comme Ubuntu) pour l'exécution
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Cloner votre dépôt (votre code Libft)
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Permet de cloner les sous-modules si vous en avez (même si peu probable pour Libft)
          submodules: true

      # Étape 2: Installer les dépendances nécessaires
      - name: Install Dependencies
        run: |
          # Francinette peut nécessiter 'make', 'gcc', etc., déjà présents sur ubuntu-latest,
          # mais on s'assure d'avoir 'git' et 'wget' ou 'curl'
          sudo apt-get update
          sudo apt-get install -y git

      # Étape 3: Cloner Francinette
      - name: Clone Francinette
        run: |
          git clone https://github.com/xicodomingues/francinette.git ~/francinette
          cd ~/francinette
          # Facultatif: Assurez-vous d'avoir la dernière version stable si vous ne voulez pas la 'main'
          # git checkout <tag_de_version> 

      # Étape 4: Lancer les tests
      # NOTE: Le répertoire de votre Libft doit être à la racine de votre dépôt.
      # L'option '-f' force l'exécution même sans 'git pull' récent.
      # Le drapeau '--no-verbose' est optionnel pour des logs plus concis.
      - name: Run Francinette Tests
        # L'environnement de travail par défaut pour les étapes suivantes est la racine du dépôt cloné.
        run: |
          ~/francinette/francinette.sh -f --no-verbose
        # Vous pouvez ajouter un 'if: always()' si vous voulez que les étapes suivantes s'exécutent 
        # même si les tests échouent, mais ici on veut que l'Action échoue si les tests échouent.